{"ast":null,"code":"const API_URL='https://www.aplicacionweb.com';export const login=async(usuario,clave)=>{try{const response=await fetch('${API_URL}/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({usuario,clave})});const data=await response.json();if(response.ok){return data;}else{throw new Error(data.error||'Error al inciar sesi贸n');}}catch(error){console.log(\"Error login\");throw error;}return response.json();};export const fetchProducts=async()=>{try{const response=await fetch('${API_URL}/productos');const data=await response.json();if(response.ok){return data.productos;}else{throw new Error(data.error||'Error al inciar sesi贸n');}}catch(error){console.log(\"Error productos\");throw error;}};","map":{"version":3,"names":["API_URL","login","usuario","clave","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","error","console","log","fetchProducts","productos"],"sources":["/home/usuario/act3_docker/aplicacionweb/react-app/src/api.js"],"sourcesContent":["const API_URL = 'https://www.aplicacionweb.com';\n\nexport const login = async (usuario, clave) => {\ntry{\n    const response = await fetch('${API_URL}/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ usuario, clave }),\n    });\n    \n    const data = await response.json();\n    \n    if (response.ok){\n    \treturn data;\n    } else {\n    \tthrow new Error(data.error || 'Error al inciar sesi贸n');\n    }\n} catch (error) {\n\tconsole.log(\"Error login\");\n\tthrow error;\n}\n    \n    return response.json();\n};\n\nexport const fetchProducts = async () => {\ntry {\n    const response = await fetch('${API_URL}/productos');\n    \n    const data = await response.json();\n    \n    if (response.ok){\n    \treturn data.productos;\n    } else {\n    \tthrow new Error(data.error || 'Error al inciar sesi贸n');\n    }\n} catch (error) {\n\tconsole.log(\"Error productos\");\n\tthrow error;\n}\n};\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,+BAA+B,CAE/C,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,OAAO,CAAEC,KAAK,GAAK,CAC/C,GAAG,CACC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kBAAkB,CAAE,CAC7CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,OAAO,CAAEC,KAAM,CAAC,CAC3C,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAElC,GAAIR,QAAQ,CAACS,EAAE,CAAC,CACf,MAAO,CAAAF,IAAI,CACZ,CAAC,IAAM,CACN,KAAM,IAAI,CAAAG,KAAK,CAACH,IAAI,CAACI,KAAK,EAAI,wBAAwB,CAAC,CACxD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1B,KAAM,CAAAF,KAAK,CACZ,CAEI,MAAO,CAAAX,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAC1B,CAAC,CAED,MAAO,MAAM,CAAAM,aAAa,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACA,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CAEpD,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAElC,GAAIR,QAAQ,CAACS,EAAE,CAAC,CACf,MAAO,CAAAF,IAAI,CAACQ,SAAS,CACtB,CAAC,IAAM,CACN,KAAM,IAAI,CAAAL,KAAK,CAACH,IAAI,CAACI,KAAK,EAAI,wBAAwB,CAAC,CACxD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9B,KAAM,CAAAF,KAAK,CACZ,CACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}