{"ast":null,"code":"const API_URL='https://www.aplicacionweb.com';export const login=async(usuario,clave)=>{try{const response=await fetch(\"\".concat(API_URL,\"/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({usuario,clave})});if(response.ok){const data=await response.json();return data;}else{const data=await response.json();throw new Error(data.error||'Error al inciar sesi贸n');}}catch(error){console.log(\"Error login\");throw error;}};export const fetchProducts=async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/productos\"));if(response.ok){const data=await response.json();return data.productos;}else{const data=await response.json();throw new Error(data.error||'Error al inciar sesi贸n');}}catch(error){console.log(\"Error productos\");throw error;}};","map":{"version":3,"names":["API_URL","login","usuario","clave","response","fetch","concat","method","headers","body","JSON","stringify","ok","data","json","Error","error","console","log","fetchProducts","productos"],"sources":["/home/usuario/act3_docker/aplicacionweb/react-app/src/api.js"],"sourcesContent":["const API_URL = 'https://www.aplicacionweb.com';\n\nexport const login = async (usuario, clave) => {\ntry{\n    const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ usuario, clave }),\n    });\n    \n    if (response.ok){\n        const data = await response.json();\n    \treturn data;\n    } else {\n    \tconst data = await response.json();\n    \tthrow new Error(data.error || 'Error al inciar sesi贸n');\n    }\n} catch (error) {\n\tconsole.log(\"Error login\");\n\tthrow error;\n}\n\n};\n\nexport const fetchProducts = async () => {\ntry {\n    const response = await fetch(`${API_URL}/productos`);\n    \n    if (response.ok){\n    \tconst data = await response.json();\n    \treturn data.productos;\n    } else {\n    \tconst data = await response.json();\n    \tthrow new Error(data.error || 'Error al inciar sesi贸n');\n    }\n} catch (error) {\n\tconsole.log(\"Error productos\");\n\tthrow error;\n}\n};\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,+BAA+B,CAE/C,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,OAAO,CAAEC,KAAK,GAAK,CAC/C,GAAG,CACC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,OAAO,WAAU,CAC7CO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,OAAO,CAAEC,KAAM,CAAC,CAC3C,CAAC,CAAC,CAEF,GAAIC,QAAQ,CAACQ,EAAE,CAAC,CACZ,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACrC,MAAO,CAAAD,IAAI,CACZ,CAAC,IAAM,CACN,KAAM,CAAAA,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,KAAM,IAAI,CAAAC,KAAK,CAACF,IAAI,CAACG,KAAK,EAAI,wBAAwB,CAAC,CACxD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1B,KAAM,CAAAF,KAAK,CACZ,CAEA,CAAC,CAED,MAAO,MAAM,CAAAG,aAAa,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACA,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,OAAO,cAAY,CAAC,CAEpD,GAAII,QAAQ,CAACQ,EAAE,CAAC,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACO,SAAS,CACtB,CAAC,IAAM,CACN,KAAM,CAAAP,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,KAAM,IAAI,CAAAC,KAAK,CAACF,IAAI,CAACG,KAAK,EAAI,wBAAwB,CAAC,CACxD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9B,KAAM,CAAAF,KAAK,CACZ,CACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}